{
  "name": "File fetcher",
  "tagline": "",
  "body": "File fetcher\r\n============\r\n\r\n[![npm version](https://badge.fury.io/js/file-fetcher.svg)](https://badge.fury.io/js/file-fetcher)\r\n[![GitHub version](https://badge.fury.io/gh/pdonias%2Ffile-fetcher.svg)](https://badge.fury.io/gh/pdonias%2Ffile-fetcher)\r\n\r\nfile-fetcher is a simple tool that lets you download files recurrently.\r\n\r\n## Installation\r\n\r\n```sh\r\n$ npm install -g file-fetcher\r\n```\r\n\r\n## Usage\r\n\r\n- Create a config file with your configuration (See documentation and example below)\r\n- Run file-fetcher:\r\n\r\n```sh\r\n$ file-fetcher <config file> [<destination folder>]\r\n```\r\n\r\n## Config file properties\r\n\r\nThe config file must contain an array of objects.\r\nEach object corresponds to a file and can/must have the following properties:\r\n\r\n| Property | Type | Required? | Description |\r\n|:---|:---|:---:|:---|\r\n| url | String | ✓ | The complete URL from which to download the file |\r\n| path | String | ✓ | The relative local path where to save the file |\r\n| name | String | ✓ | The name pattern of the destination file (e.g.: my-file-number-#.jpg) |\r\n| description | String |  | The string used to represent the file in log messages |\r\n| firstIndex | Number |  | The first number used as index (#) in name pattern |\r\n| digits | Number |  | The minimum number of digits for the index (#) in name pattern. Smaller numbers will be padded with 0s on the left. |\r\n| cron | String | ✓ or `delay` | The cron pattern that determines the download frequence |\r\n| delay | Number | ✓ or `cron` | The delay in minutes that determines the download frequence |\r\n\r\n## File name pattern\r\n\r\nThe file name needs to be a pattern in order to not overwrite the same file after each download.\r\n\r\nPattern substitutions:\r\n\r\n| String | Replaced by |\r\n|:---|:---|\r\n| # | Index of the download iteration |\r\n| {date} | A string representing the current time |\r\n\r\n## `delay` vs `cron`\r\n\r\nTo determine the download frequence of each file, you can use either the `delay` property or the `cron` property.\r\n- `delay` is simply a number of minutes between each download\r\n- `cron` is a [cron expression](https://en.wikipedia.org/wiki/Cron)\r\n\r\n## Config example\r\n\r\n```json\r\n[\r\n  {\r\n    \"url\": \"http://www.my-site.com/path/to/file.jpg\",\r\n    \"name\": \"file_nb_#({date}).jpg\",\r\n    \"path\": \"relative/path/to/file\",\r\n    \"cron\": \"0 0/2 7-18 * * *\",\r\n    \"description\": \"my file\"\r\n  },\r\n  {\r\n    \"url\": \"http://www.my-site.com/path/to/other/file.jpg\",\r\n    \"name\": \"file_nb_#.jpg\",\r\n    \"firstIndex\": \"42\",\r\n    \"digits\": \"4\",\r\n    \"path\": \"relative/path/to/other/file\",\r\n    \"delay\": \"3\",\r\n    \"description\": \"my other file\"\r\n  }\r\n]\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}